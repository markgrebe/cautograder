In general, with these problems I want to focus the grading on them using loops correctly, 
not so much on output format.  Drop the gradebook_*.zip from Blackboard in there, and from 
that directory, do:
 
python3 ../autograder.py
 
On the files not compiling, if there are errors in the *.compile for the problem, it is a zero 
for the problem as we stated.   However, if it failed to compile due to file name then 
letâ€™s compile manually and run it, if itâ€™s good, then we take 10 points off 
(Iâ€™m ratcheting that up each assignment).
 
Anything unknown, you give me a list of students/problems and Iâ€™ll handle it.  
(Since I know students always get creative with errors ðŸ˜Š ).  If you can put a draft 
grade in Blackboard for the problems they got correct, that would be great.
 
Late Assignment:
-------------
More than one hour late (after 1am 10/3 and
   before 1am 10/4)                             -6 points
After 1am on 10/4 and before 1am 10/5          -15 points
After 1am on 10/5                              -60 points (zero)

dollars.c (20 points)
-20 points if they didnâ€™t use nested loops to solve it.  i.e., just 5 printfâ€™s, 
    or one loop with 5 printfâ€™s.
-5 points â€“ number of rows or number of columns wrong.
-1 point â€“ wrong character
-0 points â€“ extra spaces, I donâ€™t care on thatâ€¦.
 
floats.c (20 points)
They can use any type of loop while, do-while, for.
-20 points no loop
-10 points loop doesnâ€™t terminate.
-1 points formatting output incorrectly
 
reverse.c (20 points)
-15 points â€“ no output
-10 points â€“ Not reversed
-5 points â€“ wrong number of ints
 
evenodd.c (20 points)
-15 points â€“ no output
-10 points â€“ loop doesnâ€™t terminate
-2 wrong number of evens (or no output for it)
-2 wrong number of odds (or no output for it)
-2 wrong number of average (or no output for it)
 
